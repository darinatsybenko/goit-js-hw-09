{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,aAIMC,EAAO,CACXC,SAAUC,SAASC,cAAc,gBACjCC,WAAYF,SAASC,cAAc,eACnCE,YAAaH,SAASC,cAAc,gBACpCG,cAAeJ,SAASC,cAAc,kBACtCI,cAAeL,SAASC,cAAc,mBAGxCH,EAAKC,SAASO,UAAW,EACzB,IAAIC,EAAa,KAkBjB,SAASC,IACP,IAAMC,EAAUC,aAAY,WAC1B,IAAMC,EAAYJ,EAAaK,KAAKC,MACMC,EAa9C,SAAmBC,GAEjB,IAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAGNE,EAAOC,KAAKC,MAAMP,EAAKI,GAEvBI,EAAQF,KAAKC,MAAMP,EAAMI,EAAOD,GAEhCM,EAAUH,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,GAE3CQ,EAAUJ,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,CAAEI,OAAMG,QAAOC,UAASC,U,CA7BaC,CAAUf,GAA5CS,EAAkCN,EAAlCM,KAAMG,EAA4BT,EAA5BS,MAAOC,EAAqBV,EAArBU,QAASC,EAAYX,EAAZW,QAE9B3B,EAAKI,WAAWyB,YAAcC,EAAeR,GAC7CtB,EAAKK,YAAYwB,YAAcC,EAAeL,GAC9CzB,EAAKM,cAAcuB,YAAcC,EAAeJ,GAChD1B,EAAKO,cAAcsB,YAAcC,EAAeH,GAE5Cd,EAAY,KACdkB,cAAcpB,E,GAEf,I,CAsBL,SAASmB,EAAeE,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,EApDtC,EAAApC,EAAAqC,SAAU,mBAAoB,CAC5BC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIxB,KACjByB,gBAAiB,EACjBC,QAAA,SAAQC,GACFA,EAAc,IAAM3B,KAAKC,MAC3B2B,EAAAC,OAAOC,QAAQ,qCAAsC,CAAEC,QAAS,OAEhE7C,EAAKC,SAASO,UAAW,EACzBC,EAAagC,EAAc,GAC3BzC,EAAKC,SAAS6C,iBAAiB,QAASpC,G","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  outputDays: document.querySelector('[data-days]'),\n  outputHours: document.querySelector('[data-hours]'),\n  outputMinutes: document.querySelector('[data-minutes]'),\n  outputSeconds: document.querySelector('[data-seconds]'),\n};\n\nrefs.startBtn.disabled = true;\nlet finishDate = null;\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= Date.now()) {\n      Notify.failure('Please choose a date in the future', { timeout: 3000 });\n    } else {\n      refs.startBtn.disabled = false;\n      finishDate = selectedDates[0];\n      refs.startBtn.addEventListener('click', onStartBtnClick);\n    }\n  },\n});\n\nfunction onStartBtnClick() {\n  const timerId = setInterval(() => {\n    const deltaTime = finishDate - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(deltaTime);\n\n    refs.outputDays.textContent = addLeadingZero(days);\n    refs.outputHours.textContent = addLeadingZero(hours);\n    refs.outputMinutes.textContent = addLeadingZero(minutes);\n    refs.outputSeconds.textContent = addLeadingZero(seconds);\n\n    if (deltaTime < 1000) {\n      clearInterval(timerId);\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}"],"names":["$dbdyf","parcelRequire","$84b9dae4df53835d$var$refs","startBtn","document","querySelector","outputDays","outputHours","outputMinutes","outputSeconds","disabled","$84b9dae4df53835d$var$finishDate","$84b9dae4df53835d$var$onStartBtnClick","timerId","setInterval","deltaTime","Date","now","ref","ms","second","minute","hour","day","days","Math","floor","hours","minutes","seconds","$84b9dae4df53835d$var$convertMs","textContent","$84b9dae4df53835d$var$addLeadingZero","clearInterval","value","toString","padStart","default","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","$h6c0i","Notify","failure","timeout","addEventListener"],"version":3,"file":"02-timer.d84879ef.js.map"}